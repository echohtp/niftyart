import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Navbar } from '../components/Navbar'
import { gql } from '@apollo/client'
import client from '../client'
import { useMemo } from 'react'
import {NftCardShowcase} from '../components/NftCardShowcase'
import { useState } from 'react'


const FEATURED_NFTS = ["3dbP3QEE8JfJZrEsHY9B3Sgz55EGLpDAD5FxkwiMvDvQ"]
const FEATURED_ARTIST = "232PpcrPc6Kz7geafvbRzt5HnHP4kX88yvzUCN69WXQC"



const GET_NFTS = gql`
  query GetNfts(
    $creators: [PublicKey!]
    $limit: Int!
    $offset: Int!
    $attributes: [AttributeFilter!]
  ) {
    nfts(
      creators: $creators
      limit: $limit
      offset: $offset
      attributes: $attributes
    ) {
      mintAddress
      name
      files {
        uri
      }
      owner {
        address
        profile{
          handle
          profileImageUrlLowres
        }
      }
    }
  }
`


const GET_NFT = gql`
query GetNft(
  $address: String!
) {
  nft(
    address: $address
    
  ) {
    name
    description
    files {
      uri
    }
    owner{
      address
      profile{
        handle
        profileImageUrlLowres
      }
    }
  }
}
`

export default function Home() {
  const RANDOM_FEATURE = Math.floor(Math.random() * FEATURED_NFTS.length)
  const [nft, setNft] = useState(null)
  useMemo(() => {
    client.query({
      query: GET_NFTS,
      variables: {
        creators: [FEATURED_ARTIST],
        offset: 0,
        limit: 10000,
        attributes: { traitType: 'niftyplex', values: ['true'] }
      }
    }).then(res => {
      console.log(res)

      setNft(res.data.nfts[Math.floor(Math.random() * res.data.nfts.length)])
    })
  }, [RANDOM_FEATURE])


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to niftyplex!
        </h1>

        <div className="grid grid-cols-2 gap-2">
          <div>
            <p className={styles.description}>
              A generative code NFT marketplace
            </p>
            <p className={styles.description}>Get started by checking out our docs</p>
          </div>

          <div>
            {
              nft && (<>
                <NftCardShowcase name={nft.name} profile={nft.owner.profile} description={nft.description} src={nft.files[0].uri} />
                </>)
            }
          </div>

        </div>
      </main>

      {/* <footer className={styles.footer}></footer> */}
    </div>
  )
}
